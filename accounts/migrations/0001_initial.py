# Generated by Django 2.0.6 on 2018-08-27 07:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('room', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('char_id', models.CharField(max_length=255, verbose_name='Идентификатор (символьный)')),
                ('action_type_add_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_add_group', to='room.UserActionType', verbose_name='Тип действия "добавление источника"')),
                ('action_type_add_vk_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_add_vk_account', to='room.UserActionType', verbose_name='Тип действия "добавление аккаунта вк"')),
                ('action_type_change_email', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_change_email', to='room.UserActionType', verbose_name='Тип действия "изменение почты"')),
                ('action_type_change_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_change_plan', to='room.UserActionType', verbose_name='Тип действия "изменение тарифа"')),
                ('action_type_check_roots', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_check_roots', to='room.UserActionType', verbose_name='Тип действия "проверка источников"')),
                ('action_type_confirm_promocode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_confirm_promocode', to='room.UserActionType', verbose_name='Тип действия "ввод промокода"')),
                ('action_type_delete_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_delete_comment', to='room.UserActionType', verbose_name='Тип действия "удаление коммента вк"')),
                ('action_type_delete_dialog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_delete_dialog', to='room.UserActionType', verbose_name='Тип действия "удаление диалога"')),
                ('action_type_delete_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_delete_group', to='room.UserActionType', verbose_name='Тип действия "удаление источника"')),
                ('action_type_delete_vk_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_delete_vk_account', to='room.UserActionType', verbose_name='Тип действия "удаление аккаунта вк"')),
                ('action_type_edit_password', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_edit_password', to='room.UserActionType', verbose_name='Тип действия "изменение пароля"')),
                ('action_type_email_confirmation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_email_confirmation', to='room.UserActionType', verbose_name='Тип действия "подтверждение почты"')),
                ('action_type_get_reset_password', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_get_reset_password', to='room.UserActionType', verbose_name='Тип действия "получение восстановления пароля"')),
                ('action_type_login', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_login', to='room.UserActionType', verbose_name='Тип действия "логинирование"')),
                ('action_type_logout', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_logout', to='room.UserActionType', verbose_name='Тип действия "выход из аккаунта"')),
                ('action_type_registration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_registration', to='room.UserActionType', verbose_name='Тип действия "регистрация"')),
                ('action_type_reset_password', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_reset_password', to='room.UserActionType', verbose_name='Тип действия "восстановление пароля"')),
                ('action_type_send_email_again', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_send_email_again', to='room.UserActionType', verbose_name='Тип действия "повторное отправление письма с подтверждением"')),
                ('action_type_send_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_send_message', to='room.UserActionType', verbose_name='Тип действия "отправка сообщения вк"')),
                ('action_type_start_spam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='action_type_start_spam', to='room.UserActionType', verbose_name='Тип действия "рассылка сообщений"')),
            ],
            options={
                'verbose_name': 'Настройки сайта',
                'verbose_name_plural': 'Настройки сайтов',
            },
        ),
        migrations.CreateModel(
            name='UserEmailConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True, verbose_name='Токен')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Подтверждение почты',
                'verbose_name_plural': 'Подтверждения почты',
            },
        ),
        migrations.CreateModel(
            name='UserPasswordConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True, verbose_name='Токен')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Подтверждение изменения пароля',
                'verbose_name_plural': 'Подтверждения изменения пароля',
            },
        ),
        migrations.CreateModel(
            name='UserPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('char_id', models.CharField(max_length=32, unique=True, verbose_name='Идентификатор тарифа (символьный)')),
                ('num_accounts', models.IntegerField(default=0, verbose_name='Максимальное количество аккаунтов вконтакте')),
                ('num_groups', models.IntegerField(default=0, verbose_name='Максимальное количество групп')),
                ('max_group_size', models.IntegerField(default=0, verbose_name='Максимальный размер группы')),
                ('num_texts', models.IntegerField(default=2, verbose_name='Количество текстов для рассылки сообщений')),
                ('price', models.FloatField(default=0, verbose_name='Цена за месяц')),
                ('is_standard', models.BooleanField(default=False, verbose_name='Входит ли тариф в состав стандартных')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Подтверждённый пароль')),
                ('spam_selected_option', models.CharField(default='1', max_length=1, verbose_name='Выбранная опция рассылки сообщений')),
                ('spam_interval', models.CharField(default='10', max_length=2, verbose_name='Выбранный интервал между сообщениями, мин.')),
                ('spam_range_from', models.CharField(default='1', max_length=2, verbose_name='Выбранный диапозон (от), мин.')),
                ('spam_range_to', models.CharField(default='10', max_length=2, verbose_name='Выбранный диапозон (до, включительно), мин.')),
                ('spam_range_or_interval', models.CharField(default='1', max_length=1, verbose_name='Выбранный интервал (заданный, или в диапазоне)')),
                ('spam_last', models.BooleanField(default=True, verbose_name='Рассылать тем, кому уже разослано')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.UserPlan', verbose_name='Тариф')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Настройка',
                'verbose_name_plural': 'Настройки',
            },
        ),
        migrations.CreateModel(
            name='UserSpamText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spam_text', models.TextField(default='Здравствуйте, <имя> <фамилия>!\nИнтересуетесь группой <группа?>\nТогда вам понравится...', verbose_name='Текст рассылки сообщений')),
                ('default', models.BooleanField(default=False, verbose_name='Основной')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Текст для спама',
                'verbose_name_plural': 'Текста для спама',
            },
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='default_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.UserPlan', verbose_name='Стандартный тариф'),
        ),
    ]
